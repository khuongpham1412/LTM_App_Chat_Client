/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Components;

import Common.Common;
import Enum.Status;
import Models.Account;
import Models.RequestModel.DataRequest;
import Models.Message;
import Utils.Constants;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;

/**
 *
 * @author Asus
 */
public class TextInput extends javax.swing.JPanel {
    /**
     * Creates new form TextInput
     */
    public TextInput() {
        initComponents();
        setBorder(BorderFactory.createLineBorder(new Color(238,240,243)));
    }
    public void test(Message mess){
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMess = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        txtMess.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtMess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMessKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(txtMess, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(txtMess, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           System.out.println("START SEND MESSAGER...");
           try {
                DataRequest request = new DataRequest();
                request.setName("SEND_MESSAGE_PRIVATE_REQUEST");
                Message mess = new Message();
//                mess.setId(UUID.randomUUID());
                mess.setUser_send(Constants.infomation.getId());
                mess.setUser_receive(Constants.id_received);
                mess.setMessage(txtMess.getText().trim());
                request.setRequest(mess);
                request.setStatus(Status.SUCCESS);
                txtMess.setText("");
                
                Common.write(request);
            } catch (IOException ex) {
                Logger.getLogger(TextInput.class.getName()).log(Level.SEVERE, null, ex);
            }       
        }
    }//GEN-LAST:event_txtMessKeyPressed
    
//    private byte[] fromObjectToByteArray(Object obj){
//        ByteArrayOutputStream bos = new ByteArrayOutputStream();
//        try {
//            ObjectOutputStream oos = new ObjectOutputStream(bos);
//            oos.writeObject(obj);
//            oos.flush();
//            return bos.toByteArray();
//        } catch (IOException ex) {
//            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return null;
//    }
//    
//    private Object fromByteArrayToObject(byte[] data){
//        ByteArrayInputStream bis = new ByteArrayInputStream(data);
//        ObjectInputStream is;
//        try {
//            is = new ObjectInputStream(bis);
//            return is.readObject();
//        } catch (Exception ex) {
//            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return null;
//    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField txtMess;
    // End of variables declaration//GEN-END:variables
}
